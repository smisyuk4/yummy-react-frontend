{"version":3,"file":"static/js/890.fe6b8d4e.chunk.js","mappings":"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","sources":["components/ButtonNav/ButtonNav.styled.js","components/CategoriesPage/FetchWithCategory.js","components/Title/Title.styled.js","components/Title/Title.jsx","components/AddRecipePage/AddRecipeForm/AddRecipeForm.styled.js","components/AddRecipePage/AddRecipeForm/RecipeDescriptionFields/RecipeDescriptionFields.styled.js","components/AddRecipePage/AddRecipeForm/RecipeDescriptionFields/RecipeDescriptionFields.jsx","components/AddRecipePage/AddRecipeForm/RecipeIngredientsFields/RecipeIngredientsFields.styled.js","components/AddRecipePage/AddRecipeForm/RecipeIngredientsFields/RecipeIngredientsFields.jsx","components/AddRecipePage/AddRecipeForm/RecipePreparationFields/RecipePreparationFields.styled.js","components/AddRecipePage/AddRecipeForm/RecipePreparationFields/RecipePreparationFields.jsx","components/AddRecipePage/AddRecipeForm/AddRecipeForm.jsx","components/FollowUs/FollowUs.styled.js","components/FollowUs/FollowUs.jsx","components/AddRecipePage/PopularRecipe/PopularRecipe.styled.js","components/AddRecipePage/PopularRecipe/PopularRecipe.jsx","pages/AddRecipePage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavLinkStyled = styled(NavLink)`\n\tbackground-color: ${({ theme }) => theme.colors.buttonPrimaryBG};\n\tcolor: ${({ theme }) => theme.colors.buttonLightBG};\n\tborder-radius: 24px 44px;\n\tborder: 1px solid ${({ theme }) => theme.colors.buttonPrimaryBG};\n\tpadding: 12px 24px;\n\tmargin: 6px;\n\ttext-decoration: none;\n\tfont-size: 14px;\n\tline-height: 21px;\n\ttransition: background-color 0.3s ease-in-out, color 0.3s ease-in-out,\n\t\tborder-color 0.3s ease-in-out;\n\t&:hover {\n\t\ttransition: background-color 0.3s ease-in-out, color 0.3s ease-in-out,\n\t\t\tborder-color 0.3s ease-in-out;\n\t\tbackground-color: ${({ theme }) => theme.colors.buttonDarkBG};\n\t\tborder-color: ${({ theme }) => theme.colors.buttonDarkBG};\n\t}\n\t@media (min-width: 768px) {\n\t\tpadding: 22px 44px;\n\t\tmargin: 9px;\n\t\tfont-size: 16px;\n\t\tline-height: 24px;\n\t}\n`;\n\nexport const NavLinkStyledLight = styled(NavLinkStyled)`\n\tbackground-color: ${({ theme }) => theme.colors.buttonLightBG};\n\tcolor: ${({ theme }) => theme.colors.buttonPrimaryBG};\n\t&:hover {\n\t\tbackground-color: ${({ theme }) => theme.colors.buttonPrimaryBG};\n\t\tcolor: ${({ theme }) => theme.colors.buttonLightBG};\n\t\tborder-color: ${({ theme }) => theme.colors.buttonPrimaryBG};\n\t}\n`;\n\nexport const FormButton = styled.button`\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: center;\n\talign-items: center;\n\tpadding: 14px 110px;\n\tmargin-top: 22px;\n\tgap: 8px;\n\tborder-radius: 6px;\n\tborder: 1px solid ${({ theme }) => theme.colors.buttonPrimaryBG};\n\tbackground-color: ${({ theme }) => theme.colors.buttonPrimaryBG};\n\tcolor: ${({ theme }) => theme.colors.buttonLightBG};\n\tfont-size: 14px;\n\tline-height: 21px;\n\ttransition: color 0.3s ease-in-out;\n\n\t&:hover {\n\t\ttransition: color 0.3s ease-in-out;\n\t\tcolor: ${({ theme }) => theme.colors.buttonDarkBG};\n\t}\n`;\n","import axios from 'axios';\n\n// axios.defaults.baseURL = 'https://yummy-rest-api.onrender.com/';\n// const TOKEN =\n// \t'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0NDE5OTNjODYzZWFmOWJiYTQ2YzY2NSIsImlhdCI6MTY4MjAyMDY2OCwiZXhwIjoxNjg0NjEyNjY4fQ.cc5YEHIsXZ2ZkIFUGCySz5LtjnoU7kjVbeYXtQpyCIw';\n\n// const config = {\n// \theaders: {\n// \t\tauth: `${TOKEN}`,\n// \t},\n// };\n\nexport const fetchAllCategory = async () => {\n\tconst responce = await axios.get(`/recipes/category-list`);\n\treturn responce;\n};\n\nexport const fetchOneCategory = async categ => {\n\tconst responce = await axios.get(`/recipes/category/${categ}`);\n\treturn responce;\n};\n","import styled from '@emotion/styled';\n\nexport const TitleDiv = styled.div`\n\tpadding-top: 50px;\n\tpadding-bottom: 72px;\n\twidth: 100%;\n\n    @media ${props => props.theme.media.tablet} {\n\t\tpadding-top: 72px;\n\t    padding-bottom: 100px;\n\t}\n\t@media ${props => props.theme.media.desktop} {\n\t\tpadding-top: 100px;\n\t    padding-bottom: 100px;\n`;\n\nexport const TitleH = styled.h1`\n\tfont-size: 28px;\n\tline-height: 28px;\n\tletter-spacing: -0.02em;\n\tcolor: #001833;\n`;\n\n/* font-family: 'Poppins'; */\n\t/* font-style: normal; */\n\t/* font-weight: 600; */\n","import { TitleDiv, TitleH } from './Title.styled';\n\nexport const Title = ({title}) => {\n  return <TitleDiv>\n          <TitleH>{title}</TitleH>\n        </TitleDiv>;\n};","import styled from '@emotion/styled';\nimport { NavLinkStyled } from 'components/ButtonNav/ButtonNav.styled';\n\nexport const RecipeFormDivStyled = styled.div`\n\twidth: 100%;\n`;\n\nexport const AddButton = styled(NavLinkStyled)``;\n","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const DescriptionDiv = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n`;\n\nexport const DescrForm = styled(Form)`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\twidth: 343px;\n\tpadding: 10px;\n\tbackground-color: white;\n\t@media ${props => props.theme.media.tablet} {\n\t\tflex-direction: row;\n\t}\n`;\n\nexport const InputWrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: 343px;\n`;\n\nexport const LabelForm = styled.label`\n\twidth: 100%;\n\tborder-bottom: 1px;\n\tborder-color: #e0e0e0;\n\tmargin-top: 24px;\n`;\n\nexport const LabelSelect = styled.label`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tfont-weight: 400;\n\tfont-size: 14px;\n\tline-height: 21px;\n\tmargin-top: 24px;\n\tletter-spacing: -0.02em;\n\n\t@media ${props => props.theme.media.tablet} {\n\t\tfont-size: 18px;\n\t\twidth: 100%;\n\t}\n`;\n\nexport const InputForm = styled(Field)`\n\twidth: 100%;\n\theight: 40px;\n\n\tfont-weight: 400;\n\tfont-size: 14px;\n\tline-height: 21px;\n\tmargin-top: 24px;\n\tletter-spacing: -0.02em;\n\n\tcolor: #000000;\n\n\t@media ${props => props.theme.media.tablet} {\n\t\tfont-size: 18px;\n\t\twidth: 100%;\n\t}\n\tborder: none;\n\tborder-color: #e0e0e0;\n\tborder-bottom-width: 1px;\n`;\n\nexport const LabelFile = styled.label`\n\tmargin-bottom: 32px;\n`;\n\nexport const InputFile = styled(Field)`\n\twidth: 100%;\n\theight: 100%;\n\topacity: 0;\n`;\n\nexport const InputSelct = styled(Field)`\n\tborder: none;\n\t&: after;\n`;\n\nexport const OverlayPicture = styled.div`\n\tposition: relative;\n\twidth: 279px;\n\theight: 268px;\n\tborder-radius: 8px;\n\tbackground-color: ${props => props.theme.colors.buttonPrimaryBG};\n`;\nexport const ThumbImege = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\theight: 100%;\n\twidth: 100%;\n\tposition: absolute;\n\tborder-radius: 8px;\n\ttop: 0;\n\tleft: 0;\n`;\n\nexport const RecipeImg = styled.img`\n\theight: 100%;\n\twidth: 100%;\n\tobject-fit: contain;\n\tobject-position: center;\n`;\n","import { Formik } from 'formik';\nimport {\n\tDescrForm,\n\tDescriptionDiv,\n\tInputFile,\n\tInputForm,\n\tInputSelct,\n\tInputWrapper,\n\tLabelForm,\n\tLabelSelect,\n\tOverlayPicture,\n\tRecipeImg,\n\tThumbImege,\n} from './RecipeDescriptionFields.styled';\nimport { useEffect, useState } from 'react';\nimport { fetchAllCategory } from 'components/CategoriesPage/FetchWithCategory';\nimport { Icon } from 'components/Icon';\n// import { PropTypes } from 'prop-types';\n\nexport const RecipeDescriptionFields = ({ onChange }) => {\n\t// const [title, setTitle] = useState('');\n\t// const [about, setAbout] = useState('');\n\t// const [categori, setCategori] = useState('');\n\t// const [time, setTime] = useState('');\n\tconst [picture, setPicture] = useState(null);\n\n\tconst [pictureUrl, setPictureUrl] = useState('');\n\tconst [categoriList, setCategoriList] = useState([]);\n\n\tuseEffect(() => {\n\t\tfetchAllCategory()\n\t\t\t.then(({ data }) => setCategoriList(data.data.resultCategory))\n\t\t\t.catch(error => error);\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (picture) {\n\t\t\tconst photoUrl = URL.createObjectURL(picture);\n\t\t\tsetPictureUrl(photoUrl);\n\t\t}\n\t}, [picture]);\n\n\tconst handleSubmit = async ({ title, about, categori }, { resetForm }) => {\n\t\t// onSubmit(data);\n\t\tresetForm();\n\t};\n\n\tconst handleOnChange = event => {\n\t\tconst name = event.target.name;\n\t\tconst target = event.target;\n\t\tonChange(target);\n\t\tswitch (name) {\n\t\t\t// \tcase 'title':\n\t\t\t// \t\tsetTitle(event.target.value);\n\t\t\t// \t\tbreak;\n\t\t\t// \tcase 'about':\n\t\t\t// \t\tsetAbout(event.target.value);\n\t\t\t// \t\tbreak;\n\t\t\tcase 'picture':\n\t\t\t\tsetPicture(event.target.files[0]);\n\t\t\t\tbreak;\n\t\t\t// \tcase 'categori':\n\t\t\t// \t\tsetCategori(event.target.value);\n\t\t\t// \t\tbreak;\n\t\t\t// \tcase 'time':\n\t\t\t// \t\tsetTime(event.target.value);\n\t\t\t// \t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log('Invalid subscription type');\n\t\t}\n\t};\n\tconst categoriName = categoriList.map(categ => {\n\t\treturn <option value={categ}>{categ}</option>;\n\t});\n\n\tconst timeList = [];\n\tfor (let i = 5; i <= 120; i += 5) {\n\t\ttimeList.push(i);\n\t}\n\tconst timeSelect = timeList.map(categ => {\n\t\treturn <option value={categ}>{categ} min</option>;\n\t});\n\n\t// const data = {\n\t// \ttitle,\n\t// \tabout,\n\t// \tcategori,\n\t// \tpicture,\n\t// \ttime,\n\t// };\n\t// console.log('data---', data);\n\n\treturn (\n\t\t<DescriptionDiv>\n\t\t\t<Formik\n\t\t\t\tinitialValues={{\n\t\t\t\t\ttitle: '',\n\t\t\t\t\tabout: '',\n\t\t\t\t\tcategori: '',\n\t\t\t\t}}\n\t\t\t\tonSubmit={handleSubmit}>\n\t\t\t\t<DescrForm autoComplete=\"off\" onChange={handleOnChange}>\n\t\t\t\t\t<OverlayPicture>\n\t\t\t\t\t\t<LabelForm>\n\t\t\t\t\t\t\t<InputFile name=\"picture\" type=\"file\" multiple />\n\t\t\t\t\t\t\t<ThumbImege>\n\t\t\t\t\t\t\t\t{pictureUrl ? (\n\t\t\t\t\t\t\t\t\t<RecipeImg src={pictureUrl} alt=\"PICTURE\" />\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\t\t\tid=\"icon-add-photo-recipe\"\n\t\t\t\t\t\t\t\t\t\tfill=\"#fafafa\"\n\t\t\t\t\t\t\t\t\t\twidth={64}\n\t\t\t\t\t\t\t\t\t\theight={64}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</ThumbImege>\n\t\t\t\t\t\t</LabelForm>\n\t\t\t\t\t</OverlayPicture>\n\n\t\t\t\t\t<InputWrapper>\n\t\t\t\t\t\t<LabelForm>\n\t\t\t\t\t\t\t<InputForm\n\t\t\t\t\t\t\t\tname=\"title\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder=\"Enter item title\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</LabelForm>\n\t\t\t\t\t\t<LabelForm>\n\t\t\t\t\t\t\t<InputForm\n\t\t\t\t\t\t\t\tname=\"about\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder=\"Enter about recipe\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</LabelForm>\n\t\t\t\t\t\t<LabelSelect>\n\t\t\t\t\t\t\tCategori\n\t\t\t\t\t\t\t<InputSelct\n\t\t\t\t\t\t\t\tname=\"categori\"\n\t\t\t\t\t\t\t\tas=\"select\"\n\t\t\t\t\t\t\t\tlist=\"character\"\n\t\t\t\t\t\t\t\tplaceholder=\"Categori\">\n\t\t\t\t\t\t\t\t{categoriName}\n\t\t\t\t\t\t\t</InputSelct>\n\t\t\t\t\t\t</LabelSelect>\n\t\t\t\t\t\t<LabelSelect>\n\t\t\t\t\t\t\tCooking time\n\t\t\t\t\t\t\t<InputSelct name=\"time\" as=\"select\">\n\t\t\t\t\t\t\t\t{timeSelect}\n\t\t\t\t\t\t\t</InputSelct>\n\t\t\t\t\t\t</LabelSelect>\n\t\t\t\t\t</InputWrapper>\n\n\t\t\t\t\t<button type=\"submit\">submit</button>\n\t\t\t\t</DescrForm>\n\t\t\t</Formik>\n\t\t</DescriptionDiv>\n\t);\n};\n\n// RecipeDescriptionFields.propTypes = {\n// \tonSubmit: PropTypes.func.isRequired,\n// };\n\n// \"Компонент рендерить поля для вводу користувачем:\n//  - файлу з фото рецепту\n//  - назви рецепту\n//  - опису рецепту\n//  - категорії рецепту - обирається з випадаючого списку, який приходить з бекенду\n//  - часу приготування рецепту - обирається з випадаючого списку в діапазоні від 5хв до 120хв з кроком 5\n// Випадаючі списки повинні показувати 6 рядків даних, всі інші повинні скролитись в межах даного списку.\n// Компонент пропсами отримує значення для інпутів, а також хендлер для опрацювання цих значень\"\n\n/* <div>\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tname=\"test\"\n\t\t\t\t\t\t\t\tid=\"\"\n\t\t\t\t\t\t\t\t// class=\"form-control\"\n\t\t\t\t\t\t\t\t// onfocus=\"this.size=5;\"\n\t\t\t\t\t\t\t\t// onblur=\"this.size=1;\"\n\t\t\t\t\t\t\t\t// onChange=\"this.size=1; this.blur();\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<option value=\"1\">One</option>\n\t\t\t\t\t\t\t\t<option value=\"2\">Two</option>\n\t\t\t\t\t\t\t\t<option value=\"3\">Three</option>\n\t\t\t\t\t\t\t\t<option value=\"4\">Four</option>\n\t\t\t\t\t\t\t\t<option value=\"5\">Five</option>\n\t\t\t\t\t\t\t\t<option value=\"\">Six</option>\n\t\t\t\t\t\t\t\t<option value=\"\">Seven</option>\n\t\t\t\t\t\t\t\t<option value=\"\">Eight</option>\n\t\t\t\t\t\t\t\t<option value=\"\">Nine</option>\n\t\t\t\t\t\t\t\t<option value=\"\">Ten</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div> */\n","import styled from '@emotion/styled';\n\nexport const FormStyled = styled.form``;","import { FormStyled } from './RecipeIngredientsFields.styled';\n\nexport const RecipeIngredientsFields = () => {\n  return <FormStyled>\n    Компонент для додавання інгрідієнтів містить\n    <label>\n      <input/>\n    </label>\n\n    <label>\n      <input/>\n    </label>\n    \n    <label>\n      <input/>\n    </label>\n  </FormStyled>;\n};\n\n// \"Компонент для додавання інгрідієнтів містить:                                                                                                                                        - підзаголовок.                                                                                                                               \n//  - лічильник к-сті зазначених інгрідієнтів у рецепті. Кнопки +/- або додають нове поле для воду наприкінці переліку, або видаляють останнє поле. \n//  - поле для внесення даних про інгрідієнти, складається з: \n//      * назва інгрідієнта(обирається з випадаючого списку, який приходить з бекенду) \n//      * к-сть інгрідієнта + міра к-сті (обирається з випадаючого списку)\n//      * кнопка видалення, по кліку на яку воно видаляється зі стейту і сторінки.\"","import styled from '@emotion/styled';\n\nexport const FormStyled = styled.form``;","import { FormStyled } from './RecipePreparationFields.styled';\n\nexport const RecipePreparationFields = () => {\n  // форму створив до того як читав ТЗ, треба думати, виправляти\n  return <FormStyled>\n            <textarea cols={50} rows={10}>\n\n            </textarea>\n        </FormStyled>;\n};\n\n\n// \"Компонент рендерить textarea елемент.\n// Дані введені користувачем в цей елемент повинні записуватись в стейт форми preparation в масив елементів. \n// Кожен з елементів буде містити в собі текст введений користувачем з нового рядка після натискання на клавішу ENTER в текстовому полі.\n// Якщо весь текст був написаний без переходу на новий рядок через ENTER, то в масиві  preparation повинен бути один елемент з цим текстом\"","// import { RecipeDescription } from '../RecipeDescription';\n// import { AddButton, RecipeFormDivStyled } from './AddRecipeForm.styled';\nimport { AddButton } from './AddRecipeForm.styled';\n\nimport { useState } from 'react';\n\nimport { RecipeDescriptionFields } from './RecipeDescriptionFields';\nimport { RecipeIngredientsFields } from './RecipeIngredientsFields';\nimport { RecipePreparationFields } from './RecipePreparationFields';\n\nexport const AddRecipeForm = () => {\n\tconst [title, setTitle] = useState('');\n\tconst [about, setAbout] = useState('');\n\tconst [categori, setCategori] = useState('');\n\tconst [picture, setPicture] = useState(null);\n\tconst [time, setTime] = useState('');\n\n\tconst [totalFormValues, setTotalFormValues] = useState({});\n\t// const addRecipe = data => {\n\t// \tconsole.log('New Recipe', data);\n\t// };\n\n\tconst testFunc = terget => {\n\t\t// прийняти данні з форм внизу та записати собі в загальний стейт\n\t\tsetTotalFormValues();\n\t\tconsole.log(totalFormValues);\n\t};\n\n\tconst tesOnCanfeDescription = terget => {\n\t\tswitch (terget.name) {\n\t\t\tcase 'title':\n\t\t\t\tsetTitle(terget.value);\n\t\t\t\tbreak;\n\t\t\tcase 'about':\n\t\t\t\tsetAbout(terget.value);\n\t\t\t\tbreak;\n\t\t\tcase 'picture':\n\t\t\t\tsetPicture(terget.files[0]);\n\t\t\t\tbreak;\n\t\t\tcase 'categori':\n\t\t\t\tsetCategori(terget.value);\n\t\t\t\tbreak;\n\t\t\tcase 'time':\n\t\t\t\tsetTime(terget.value);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log('Invalid subscription type');\n\t\t}\n\t};\n\tconsole.log('TOTAL', title, time, categori, picture, about);\n\n\tconst testFunc2 = () => {\n\t\t// взяти данні з стейт - створити новий рецепт\n\n\t\t// та відправити на сервер\n\n\t\tconsole.log(totalFormValues);\n\t};\n\n\ttestFunc2();\n\n\treturn (\n\t\t<>\n\t\t\t<RecipeDescriptionFields onChange={tesOnCanfeDescription} />\n\t\t\t<RecipeIngredientsFields onChange={testFunc} />\n\t\t\t<RecipePreparationFields onChange={testFunc} />\n\t\t\t<AddButton onClick={testFunc2}>Add</AddButton>\n\t\t</>\n\t\t// <RecipeFormDivStyled>\n\t\t// \t<RecipeDescription onSubmit={addRecipe} />\n\t\t// \t<AddButton>Add</AddButton>\n\t\t// </RecipeFormDivStyled>\n\t);\n};\n\n// \"Компонент містить стейт, в якому зберігаються усі заповнені користувачем у формі  дані.\n// Компонент рендерить форму з компонентами:\n\n//  - RecipeDescriptionFields\n\n//  - RecipeIngredientsFields\n\n//  - RecipePreparationFields\n\n// Всі поля форми обовʼязкові, валідуються і виводять користувачу відповідну інформацію у випадку, якщо введене значення не валідне. Компонент рендерить кнопку Add, яка по сабміту форми відправляє запит на створення нового рецепту з відповідними даними.\n// Після успішного запиту рецепт додається до списку власних рецептів користувача. Після чого користувач повинен бути переадресований на сторінку MyRecipesPage\n// Після помилки в запиті користувачеві виводиться відповідне пуш-повідомлення\"\n","import styled from '@emotion/styled';\n\nexport const DivStyled = styled.div``;","import { DivStyled } from './FollowUs.styled';\nimport { Icon } from 'components/Icon';\n\nexport const FollowUs = ({ title }) => {\n  return (\n    <DivStyled>\n      <h2>{title}</h2>\n      <ul>\n        <li key={1}>\n          <a\n            href=\"https://github.com/smisyuk4\"\n            rel=\"noopener noreferer\"\n            area-label=\"git\"\n          >\n            <Icon id=\"icon-facebook\" fill=\"red\" width={50} height={50} />\n          </a>\n        </li>\n        <li key={2}>\n          <a\n            href=\"https://github.com/smisyuk4\"\n            rel=\"noopener noreferer\"\n            area-label=\"git\"\n          >\n            <Icon id=\"icon-youtube\" fill=\"red\" width={50} height={50} />\n          </a>\n        </li>\n        <li key={3}>\n          <a\n            href=\"https://github.com/smisyuk4\"\n            rel=\"noopener noreferer\"\n            area-label=\"git\"\n          >\n            <Icon id=\"icon-twitter\" fill=\"red\" width={50} height={50} />\n          </a>\n        </li>\n        <li key={4}>\n          <a\n            href=\"https://github.com/smisyuk4\"\n            rel=\"noopener noreferer\"\n            area-label=\"git\"\n          >\n            <Icon id=\"icon-instagram\" fill=\"red\" width={50} height={50} />\n          </a>\n        </li>\n      </ul>\n    </DivStyled>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const DivStyled = styled.div``;","import { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nimport { DivStyled } from './PopularRecipe.styled';\n\n// ! FETCH RECIPES TO MAIN PAGE\naxios.defaults.baseURL = 'https://yummy-rest-api.onrender.com/';\nconst TOKEN =\n\t'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0NDE5OTNjODYzZWFmOWJiYTQ2YzY2NSIsImlhdCI6MTY4MjAyMDY2OCwiZXhwIjoxNjg0NjEyNjY4fQ.cc5YEHIsXZ2ZkIFUGCySz5LtjnoU7kjVbeYXtQpyCIw';\n\nconst config = {\n\theaders: {\n\t\tauth: `${TOKEN}`,\n\t},\n};\n\nconst fetchRecipes = async () => {\n\tconst responce = await axios.get(\n\t\t`recipes/popular-recipes?auth=${TOKEN}`,\n\t\tconfig\n\t);\n\treturn responce;\n};\n\nexport const PopularRecipe = ({ title }) => {\n\tconst [popRecipes, setPopRecipes] = useState([]);\n\tuseEffect(() => {\n\t\tfetchRecipes()\n\t\t\t.then(({ data }) => setPopRecipes(data.data.recipesByPopular))\n\t\t\t.catch(error => error);\n\t}, []);\n\tconsole.log('popular-recipes', popRecipes);\n\n\treturn (\n\t\t<DivStyled>\n\t\t\t<h2>{title}</h2>\n\t\t\t<ul>\n\t\t\t\t<li key={1}>\n\t\t\t\t\t<a\n\t\t\t\t\t\thref=\"https://www.youtube.com/watch?v=H5TuP6svrpo&ab_channel=%D0%A5%D0%B0%D1%89%D1%96\"\n\t\t\t\t\t\trel=\"noopener noreferer\"\n\t\t\t\t\t\tarea-label=\"git\">\n\t\t\t\t\t\tRECIPE CARD\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</DivStyled>\n\t);\n};\n\n// \"Компонент виконує запит на бекенд за популярними рецептами\n// В разі успішної відповіді компонент рендерить список відповідних елементів\n// В разі помилки компонент рендерить повідомлення про відсутність популярних рецептів в даний момент.\n// Кожен рецепт потрібно реалізувати як посилання. По кліку на будь-яке з них користувача потрібно\n// переадресувати на сторінку з описом відповідного рецепту RecipePage\"\n","import { Title } from '../components/Title';\nimport { AddRecipeForm } from 'components/AddRecipePage/AddRecipeForm';\nimport { FollowUs } from 'components/FollowUs';\nimport { PopularRecipe } from 'components/AddRecipePage/PopularRecipe';\n// // import { AddRecipeDivStyled } from './AddRecipePage.styled';\n\nconst AddRecipePage = () => {\n  return (\n//   <AddRecipeDivStyled>\n\t\t<>\n\t\t\t<Title title=\"Add recipe\"/>\n\t\t\t<AddRecipeForm/>\n\t\t\t<FollowUs title=\"Follow us\"/>\n\t\t\t<PopularRecipe title=\"Popular recipe\"/>\n\t\t</>\n\n//   </AddRecipeDivStyled>;\n)};\n\nexport default AddRecipePage\n\n// \"Зверстати компоненти що знаходяться на сторінці AddRecipePage (мобільна, планшет та десктопна версії):\n// 1. MainTitle - універсальний компонент, що відмальовує заголовок і використовується на різних сторінках застосунку\n// 2. AddRecipeForm\n// 3. FollowUs\n// 4. PopularRecipe\"\n\n// export const AddRecipeDivStyled = styled.AddRecipeDiv`\n// // \twidth: 100vw;\n// // \theight: 100vh;\n// // \tposition: absolute;\n// // \tbottom: 0;\n// // \tright: 0;\n\n// // \t@media ${props => props.theme.media.tablet} {\n// // \t}\n// // \t@media ${props => props.theme.media.desktop} {\n// // \t}\n// // `;"],"names":["NavLinkStyled","styled","NavLink","theme","colors","buttonPrimaryBG","buttonLightBG","buttonDarkBG","NavLinkStyledLight","FormButton","fetchAllCategory","axios","responce","fetchOneCategory","categ","TitleDiv","props","media","tablet","desktop","TitleH","Title","title","AddButton","DescriptionDiv","DescrForm","Form","InputWrapper","LabelForm","LabelSelect","InputForm","Field","InputFile","InputSelct","OverlayPicture","ThumbImege","RecipeImg","RecipeDescriptionFields","onChange","useState","picture","setPicture","pictureUrl","setPictureUrl","categoriList","setCategoriList","useEffect","then","data","resultCategory","catch","error","photoUrl","URL","createObjectURL","handleSubmit","about","categori","resetForm","categoriName","map","value","timeList","i","push","timeSelect","initialValues","onSubmit","autoComplete","event","name","target","files","console","log","type","multiple","src","alt","Icon","id","fill","width","height","placeholder","as","list","FormStyled","RecipeIngredientsFields","RecipePreparationFields","cols","rows","AddRecipeForm","setTitle","setAbout","setCategori","time","setTime","totalFormValues","setTotalFormValues","testFunc","terget","testFunc2","onClick","DivStyled","FollowUs","href","rel","TOKEN","config","headers","auth","fetchRecipes","PopularRecipe","popRecipes","setPopRecipes","recipesByPopular"],"sourceRoot":""}