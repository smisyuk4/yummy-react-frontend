{"version":3,"file":"static/js/702.eff8d8ca.chunk.js","mappings":"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","sources":["pages/RegisterPage/RegisterPage.styled.js","components/Auth/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const DivStyled = styled.div`\n\tpadding-bottom: 60px;\n\toverflow: clip;\n\tposition: relative;\n\tmin-height: calc(100vh - 60px);\n\tdisplay: flex;\n\tflex-direction: column;\n`;\n","import {\n\tFormStyled,\n\tLabelStyled,\n\tInputForm,\n\tInputError,\n\tH1Styled,\n\tIconStyled,\n\tIconStatusStyled,\n\tNavLinkStyled,\n\tDivStyled,\n} from '../AuthForm.styled';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { FormButton } from 'components/ButtonNav/ButtonNav.styled';\nimport { useDispatch } from 'react-redux';\nimport { registerUser } from 'redux/auth/operations';\n\nconst passwordRegex = /^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$/;\nconst nameRegex = /^[a-zA-Zа-яА-ЯґҐєЄїЇіІ0-9\\s]{1,}$/;\nconst emailRegex =\n\t/^[\\w!#$%^&*\\-=/{}[\\]_|`~?\\\\+][\\w!#$%^&*\\\\+\\-?=/{}[\\]_|`~\\\\.]{1,62}[\\w!#$%^&*\\-=/{}+[\\]_|`~?\\\\]@([\\w]+\\.){1,20}[\\w]{1,4}$/;\n\nconst RegisterSchema = Yup.object().shape({\n\tname: Yup.string()\n\t\t.matches(\n\t\t\tnameRegex,\n\t\t\t'Name can include numbers and letters (Latin, Cyrillic), the minimum number of characters in the field is 1 (inclusive), the maximum is 16 (inclusive)'\n\t\t)\n\t\t.min(1)\n\t\t.max(16)\n\t\t.required(),\n\tpassword: Yup.string()\n\t\t.matches(\n\t\t\tpasswordRegex,\n\t\t\t'The password must include numbers and letters - the minimum number of characters in the field - 6 (inclusive), the maximum - 16 (inclusive)'\n\t\t)\n\t\t.min(6)\n\t\t.max(16)\n\t\t.required(),\n\tpasswordConfirm: Yup.string()\n\t\t.matches(\n\t\t\tpasswordRegex,\n\t\t\t'The password must include numbers and letters - the minimum number of characters in the field - 6 (inclusive), the maximum - 16 (inclusive)'\n\t\t)\n\t\t.min(6)\n\t\t.max(16)\n\t\t.required(),\n\temail: Yup.string()\n\t\t.min(6)\n\t\t.max(86)\n\t\t.matches(\n\t\t\temailRegex,\n\t\t\t'The local part of the mail can contain capital and small Latin letters (A-Z, a-z), numbers (from 0 to 9) and special symbols !#$%^&*_-=*/?+ but no more than 64 characters in local part and 86 characters in total(max 4 character in domain).'\n\t\t)\n\t\t.email()\n\t\t.required(),\n});\nconst validate = values => {\n\tconst errors = {};\n\tif (values.passwordConfirm !== values.password) {\n\t\terrors.passwordConfirm = \"Passwords don't match\";\n\t}\n\treturn errors;\n};\nexport const RegisterForm = () => {\n\tconst dispatch = useDispatch();\n\tconst sendRegister = ({ name, password, email }, { resetForm }) => {\n\t\tdispatch(registerUser({ name, password, email }));\n\t\tresetForm();\n\t};\n\treturn (\n\t\t<DivStyled>\n\t\t\t<Formik\n\t\t\t\tinitialValues={{\n\t\t\t\t\tname: '',\n\t\t\t\t\tpassword: '',\n\t\t\t\t\tpasswordConfirm: '',\n\t\t\t\t\temail: '',\n\t\t\t\t}}\n\t\t\t\tvalidate={validate}\n\t\t\t\tonSubmit={sendRegister}\n\t\t\t\tvalidationSchema={RegisterSchema}>\n\t\t\t\t{({ errors, touched, values }) => (\n\t\t\t\t\t<FormStyled autoComplete=\"off\">\n\t\t\t\t\t\t<H1Styled>Registration</H1Styled>\n\t\t\t\t\t\t<LabelStyled\n\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\ttouched.name &&\n\t\t\t\t\t\t\t\t(errors.name ? 'error' : 'valid')\n\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t<IconStyled id=\"icon-person\" />\n\t\t\t\t\t\t\t<InputForm\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\tplaceholder=\"Username\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{touched.name &&\n\t\t\t\t\t\t\t\t(errors.name ? (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<ErrorMessage\n\t\t\t\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\t\t\t\tcomponent={InputError}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<IconStatusStyled id=\"icon-validation-error\" />\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<IconStatusStyled id=\"icon-validation-success\" />\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</LabelStyled>\n\t\t\t\t\t\t<LabelStyled\n\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\ttouched.email &&\n\t\t\t\t\t\t\t\t(errors.email ? 'error' : 'valid')\n\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t<IconStyled id=\"icon-letter\" />\n\t\t\t\t\t\t\t<InputForm\n\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\tplaceholder=\"Email\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{touched.email &&\n\t\t\t\t\t\t\t\t(errors.email ? (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<ErrorMessage\n\t\t\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\t\t\tcomponent={InputError}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<IconStatusStyled id=\"icon-validation-error\" />\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<IconStatusStyled id=\"icon-validation-success\" />\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</LabelStyled>\n\t\t\t\t\t\t<LabelStyled\n\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\ttouched.password &&\n\t\t\t\t\t\t\t\t(errors.password ? 'error' : 'valid')\n\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t<IconStyled id=\"icon-lock\" />\n\t\t\t\t\t\t\t<InputForm\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{touched.password &&\n\t\t\t\t\t\t\t\t(errors.password ? (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<ErrorMessage\n\t\t\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\t\t\tcomponent={InputError}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<IconStatusStyled id=\"icon-validation-error\" />\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<IconStatusStyled id=\"icon-validation-success\" />\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</LabelStyled>\n\t\t\t\t\t\t<LabelStyled\n\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\ttouched.passwordConfirm &&\n\t\t\t\t\t\t\t\t(errors.passwordConfirm ? 'error' : 'valid')\n\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t<IconStyled id=\"icon-lock\" />\n\t\t\t\t\t\t\t<InputForm\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tname=\"passwordConfirm\"\n\t\t\t\t\t\t\t\tplaceholder=\"Password confirmation\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{touched.passwordConfirm &&\n\t\t\t\t\t\t\t\t(errors.passwordConfirm ? (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<ErrorMessage\n\t\t\t\t\t\t\t\t\t\t\tname=\"passwordConfirm\"\n\t\t\t\t\t\t\t\t\t\t\tcomponent={InputError}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<IconStatusStyled id=\"icon-validation-error\" />\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<IconStatusStyled id=\"icon-validation-success\" />\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</LabelStyled>\n\n\t\t\t\t\t\t<FormButton type=\"submit\">Sign up</FormButton>\n\t\t\t\t\t</FormStyled>\n\t\t\t\t)}\n\t\t\t</Formik>\n\t\t\t<NavLinkStyled to=\"/login\">Login</NavLinkStyled>\n\t\t</DivStyled>\n\t);\n};\n","import { DivStyled } from './RegisterPage.styled';\nimport { RegisterForm } from 'components/Auth/RegisterForm';\nimport { Image } from 'components/Auth/Image';\nimport { BackGround } from 'components/Auth/BackGround';\n\nexport const RegisterPage = () => {\n\treturn (\n\t\t<DivStyled>\n\t\t\t<Image />\n\t\t\t<RegisterForm />\n\n\t\t\t<BackGround />\n\t\t</DivStyled>\n\t);\n};\n"],"names":["DivStyled","styled","passwordRegex","RegisterSchema","Yup","shape","name","matches","min","max","required","password","passwordConfirm","email","validate","values","errors","RegisterForm","dispatch","useDispatch","initialValues","onSubmit","resetForm","registerUser","validationSchema","touched","autoComplete","className","id","type","placeholder","component","InputError","to","RegisterPage","Image","BackGround"],"sourceRoot":""}