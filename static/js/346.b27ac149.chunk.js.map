{"version":3,"file":"static/js/346.b27ac149.chunk.js","mappings":"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","sources":["components/Title/Title.styled.js","components/Title/Title.jsx","components/AddRecipePage/AddRecipeForm/RecipeDescriptionFields/RecipeDescriptionFields.styled.js","components/AddRecipePage/AddRecipeForm/RecipeDescriptionFields/RecipeDescriptionFields.jsx","components/AddRecipePage/AddRecipeForm/RecipeIngredientsFields/RecipeIngredientsFields.styled.js","components/AddRecipePage/AddRecipeForm/RecipeIngredientsFields/RecipeIngredientsFields.jsx","components/AddRecipePage/AddRecipeForm/RecipePreparationFields/RecipePreparationFields.styled.js","components/AddRecipePage/AddRecipeForm/RecipePreparationFields/RecipePreparationFields.jsx","components/AddRecipePage/AddRecipeForm/AddRecipeForm.jsx","components/FollowUs/FollowUs.styled.js","components/FollowUs/FollowUs.jsx","components/AddRecipePage/PopularRecipe/PopularRecipe.styled.js","components/AddRecipePage/PopularRecipe/PopularRecipe.jsx","pages/AddRecipePage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const TitleDiv = styled.div`\n\tpadding-top: 50px;\n\tpadding-bottom: 72px;\n\twidth: 100%;\n\n    @media ${props => props.theme.media.tablet} {\n\t\tpadding-top: 72px;\n\t    padding-bottom: 100px;\n\t}\n\t@media ${props => props.theme.media.desktop} {\n\t\tpadding-top: 100px;\n\t    padding-bottom: 100px;\n`;\n\nexport const TitleH = styled.h1`\n\tfont-size: 28px;\n\tline-height: 28px;\n\tletter-spacing: -0.02em;\n\tcolor: #001833;\n`;\n\n/* font-family: 'Poppins'; */\n\t/* font-style: normal; */\n\t/* font-weight: 600; */\n","import { TitleDiv, TitleH } from './Title.styled';\n\nexport const Title = ({title}) => {\n  return <TitleDiv>\n          <TitleH>{title}</TitleH>\n        </TitleDiv>;\n};","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const DescriptionDiv = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n`;\n\nexport const DescrForm = styled(Form)`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\twidth: 400px;\n\tpadding: 10px;\n\tbackground-color: white;\n\t@media ${props => props.theme.media.tablet} {\n\t\tflex-direction: row;\n\t}\n`;\n\nexport const InputWrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n`;\n\nexport const LabelForm = styled.label`\n\tfont-weight: 400;\n\tfont-size: 14px;\n\tline-height: 21px;\n\n\tletter-spacing: -0.02em;\n\n\tcolor: #000000;\n\n\topacity: 0.5;\n\t@media ${props => props.theme.media.tablet} {\n\t\tfont-size: 18px;\n\t\twidth: 100%;\n\t}\n`;\n\nexport const InputForm = styled(Field)`\n\twidth: 100%;\n\tfont-size: 18px;\n`;\n\nexport const InputFile = styled(Field)`\n\twidth: 279px;\n\theight: 268px;\n\tborder-radius: 8px;\n\tbackground-color: ${props => props.theme.colors.buttonPrimaryBG};\n`;\n\nexport const RecipeImg = styled.img`\n\twidth: 100%;\n`;\n","import { Formik } from 'formik';\nimport {\n\tDescrForm,\n\tDescriptionDiv,\n\tInputFile,\n\tInputForm,\n\tInputWrapper,\n\tLabelForm,\n\t// RecipeImg,\n} from './RecipeDescriptionFields.styled';\nimport { useState } from 'react';\n// import { PropTypes } from 'prop-types';\n\nexport const RecipeDescriptionFields = ({ onSubmit }) => {\n\tconst [title, setTitle] = useState('');\n\tconst [about, setAbout] = useState('');\n\tconst [categori, setCategori] = useState('');\n\tconst [picture, setPicture] = useState(null);\n\n\t// const imgURL = URL.createObjectURL(picture);\n\t// const handlerTitle = text => {\n\t//   setTitle(text.value)\n\t//   console.log(title)\n\n\t// }\n\tconst handleSubmit = async ({ title, about, categori }, { resetForm }) => {\n\t\tconsole.log(title, about, categori);\n\t\tonSubmit(data);\n\t\tresetForm();\n\t};\n\n\tconst handleOnChange = event => {\n\t\tconsole.log('Form::onChange', event.target.name);\n\t\tconst name = event.target.name;\n\t\tswitch (name) {\n\t\t\tcase 'title':\n\t\t\t\tsetTitle(event.target.value);\n\t\t\t\tconsole.log('title:', title);\n\t\t\t\tbreak;\n\t\t\tcase 'about':\n\t\t\t\tsetAbout(event.target.value);\n\t\t\t\tconsole.log('about:', about);\n\t\t\t\tbreak;\n\t\t\tcase 'picture':\n\t\t\t\tsetPicture(event.target.value);\n\t\t\t\tconsole.log('picture:', picture);\n\t\t\t\t// const url = URL.createObjectURL(event.target.value);\n\t\t\t\t// console.log('picture', event.target.value)\n\t\t\t\t// console.log('picture', url);\n\t\t\t\tbreak;\n\t\t\tcase 'categori':\n\t\t\t\tsetCategori(event.target.value);\n\t\t\t\tconsole.log('categori:', categori);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log('Invalid subscription type');\n\t\t}\n\t};\n\n\tconst data = {\n\t\ttitle,\n\t\tabout,\n\t\tcategori,\n\t};\n\tconsole.log('data---', data);\n\treturn (\n\t\t<DescriptionDiv>\n\t\t\t<Formik\n\t\t\t\tinitialValues={{\n\t\t\t\t\ttitle: '',\n\t\t\t\t\tabout: '',\n\t\t\t\t\tcategori: '',\n\t\t\t\t}}\n\t\t\t\tonSubmit={handleSubmit}>\n\t\t\t\t<DescrForm autoComplete=\"off\" onChange={handleOnChange}>\n\t\t\t\t\t<LabelForm>\n\t\t\t\t\t\t<InputFile name=\"picture\" type=\"file\">\n\t\t\t\t\t\t\t{/* <RecipeImg src={imgURL} alt=\"PICTURE\" /> */}\n\t\t\t\t\t\t</InputFile>\n\t\t\t\t\t</LabelForm>\n\t\t\t\t\t<InputWrapper>\n\t\t\t\t\t\t<LabelForm>\n\t\t\t\t\t\t\tEnter item title\n\t\t\t\t\t\t\t<InputForm name=\"title\" type=\"text\" />\n\t\t\t\t\t\t</LabelForm>\n\t\t\t\t\t\t<LabelForm>\n\t\t\t\t\t\t\tEnter about recipe\n\t\t\t\t\t\t\t<InputForm name=\"about\" type=\"text\" />\n\t\t\t\t\t\t</LabelForm>\n\t\t\t\t\t\t<LabelForm>\n\t\t\t\t\t\t\tCategori\n\t\t\t\t\t\t\t<InputForm name=\"categori\" as=\"select\">\n\t\t\t\t\t\t\t\t<option value=\"\"> </option>\n\t\t\t\t\t\t\t\t<option value=\"red\">Red</option>\n\t\t\t\t\t\t\t\t<option value=\"green\">Green</option>\n\t\t\t\t\t\t\t\t<option value=\"blue\">Blue</option>\n\t\t\t\t\t\t\t</InputForm>\n\t\t\t\t\t\t</LabelForm>\n\t\t\t\t\t\t<LabelForm>\n\t\t\t\t\t\t\tCooking time\n\t\t\t\t\t\t\t<InputForm name=\"categori\" as=\"select\">\n\t\t\t\t\t\t\t\t<option value=\"red\">Red</option>\n\t\t\t\t\t\t\t\t<option value=\"green\">Green</option>\n\t\t\t\t\t\t\t\t<option value=\"blue\">Blue</option>\n\t\t\t\t\t\t\t</InputForm>\n\t\t\t\t\t\t</LabelForm>\n\t\t\t\t\t</InputWrapper>\n\n\t\t\t\t\t<button type=\"submit\">submit</button>\n\t\t\t\t</DescrForm>\n\t\t\t</Formik>\n\t\t</DescriptionDiv>\n\t);\n};\n\n// RecipeDescriptionFields.propTypes = {\n// \tonSubmit: PropTypes.func.isRequired,\n// };\n\n\n// \"Компонент рендерить поля для вводу користувачем:\n//  - файлу з фото рецепту\n//  - назви рецепту\n//  - опису рецепту\n//  - категорії рецепту - обирається з випадаючого списку, який приходить з бекенду\n//  - часу приготування рецепту - обирається з випадаючого списку в діапазоні від 5хв до 120хв з кроком 5\n// Випадаючі списки повинні показувати 6 рядків даних, всі інші повинні скролитись в межах даного списку.\n// Компонент пропсами отримує значення для інпутів, а також хендлер для опрацювання цих значень\"","import styled from '@emotion/styled';\n\nexport const FormStyled = styled.form``;","import { FormStyled } from './RecipeIngredientsFields.styled';\n\nexport const RecipeIngredientsFields = () => {\n  return <FormStyled>\n    Компонент для додавання інгрідієнтів містить\n    <label>\n      <input/>\n    </label>\n\n    <label>\n      <input/>\n    </label>\n    \n    <label>\n      <input/>\n    </label>\n  </FormStyled>;\n};\n\n// \"Компонент для додавання інгрідієнтів містить:                                                                                                                                        - підзаголовок.                                                                                                                               \n//  - лічильник к-сті зазначених інгрідієнтів у рецепті. Кнопки +/- або додають нове поле для воду наприкінці переліку, або видаляють останнє поле. \n//  - поле для внесення даних про інгрідієнти, складається з: \n//      * назва інгрідієнта(обирається з випадаючого списку, який приходить з бекенду) \n//      * к-сть інгрідієнта + міра к-сті (обирається з випадаючого списку)\n//      * кнопка видалення, по кліку на яку воно видаляється зі стейту і сторінки.\"","import styled from '@emotion/styled';\n\nexport const FormStyled = styled.form``;","import { FormStyled } from './RecipePreparationFields.styled';\n\nexport const RecipePreparationFields = () => {\n  // форму створив до того як читав ТЗ, треба думати, виправляти\n  return <FormStyled>\n            <textarea cols={50} rows={10}>\n\n            </textarea>\n        </FormStyled>;\n};\n\n\n// \"Компонент рендерить textarea елемент.\n// Дані введені користувачем в цей елемент повинні записуватись в стейт форми preparation в масив елементів. \n// Кожен з елементів буде містити в собі текст введений користувачем з нового рядка після натискання на клавішу ENTER в текстовому полі.\n// Якщо весь текст був написаний без переходу на новий рядок через ENTER, то в масиві  preparation повинен бути один елемент з цим текстом\"","// import { RecipeDescription } from '../RecipeDescription';\n// import { AddButton, RecipeFormDivStyled } from './AddRecipeForm.styled';\n\nimport { useState } from \"react\";\n\nimport { RecipeDescriptionFields } from \"./RecipeDescriptionFields\";\nimport { RecipeIngredientsFields } from \"./RecipeIngredientsFields\";\nimport { RecipePreparationFields } from \"./RecipePreparationFields\";\n\nexport const AddRecipeForm = () => {\n\tconst [totalFormValues, setTotalFormValues] = useState({})\n\t// const addRecipe = data => {\n\t// \tconsole.log('New Recipe', data);\n\t// };\n\n\tconst testFunc = ()=>{\n\t\t// прийняти данні з форм внизу та записати собі в загальний стейт\n\t\tsetTotalFormValues()\n\n\t\t\n\t\tconsole.log(totalFormValues)\n\t}\n\n\n\tconst testFunc2 = ()=>{\n\t\t// взяти данні з стейт - створити новий рецепт\n\n\t\t// та відправити на сервер\n\t\t\n\t\tconsole.log(totalFormValues)\n\t}\n\n\ttestFunc2()\n\n\treturn (<>\n\t\t<RecipeDescriptionFields onChange={testFunc}/>\n\t\t<RecipeIngredientsFields onChange={testFunc}/>\n\t\t<RecipePreparationFields onChange={testFunc}/>\n\t</>\n\t\t// <RecipeFormDivStyled>\n\t\t// \t<RecipeDescription onSubmit={addRecipe} />\n\t\t// \t<AddButton>Add</AddButton>\n\t\t// </RecipeFormDivStyled>\n\t);\n};\n\n\n// \"Компонент містить стейт, в якому зберігаються усі заповнені користувачем у формі  дані.\n// Компонент рендерить форму з компонентами:\n\n//  - RecipeDescriptionFields\n\n//  - RecipeIngredientsFields\n\n//  - RecipePreparationFields\n\n// Всі поля форми обовʼязкові, валідуються і виводять користувачу відповідну інформацію у випадку, якщо введене значення не валідне. Компонент рендерить кнопку Add, яка по сабміту форми відправляє запит на створення нового рецепту з відповідними даними. \n// Після успішного запиту рецепт додається до списку власних рецептів користувача. Після чого користувач повинен бути переадресований на сторінку MyRecipesPage\n// Після помилки в запиті користувачеві виводиться відповідне пуш-повідомлення\"","import styled from '@emotion/styled';\n\nexport const DivStyled = styled.div``;","import { DivStyled } from './FollowUs.styled';\nimport { Icon } from 'components/Icon';\n\nexport const FollowUs = ({ title }) => {\n  return (\n    <DivStyled>\n      <h2>{title}</h2>\n      <ul>\n        <li key={1}>\n          <a\n            href=\"https://github.com/smisyuk4\"\n            rel=\"noopener noreferer\"\n            area-label=\"git\"\n          >\n            <Icon id=\"icon-facebook\" fill=\"red\" width={50} height={50} />\n          </a>\n        </li>\n        <li key={2}>\n          <a\n            href=\"https://github.com/smisyuk4\"\n            rel=\"noopener noreferer\"\n            area-label=\"git\"\n          >\n            <Icon id=\"icon-youtube\" fill=\"red\" width={50} height={50} />\n          </a>\n        </li>\n        <li key={3}>\n          <a\n            href=\"https://github.com/smisyuk4\"\n            rel=\"noopener noreferer\"\n            area-label=\"git\"\n          >\n            <Icon id=\"icon-twitter\" fill=\"red\" width={50} height={50} />\n          </a>\n        </li>\n        <li key={4}>\n          <a\n            href=\"https://github.com/smisyuk4\"\n            rel=\"noopener noreferer\"\n            area-label=\"git\"\n          >\n            <Icon id=\"icon-instagram\" fill=\"red\" width={50} height={50} />\n          </a>\n        </li>\n      </ul>\n    </DivStyled>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const DivStyled = styled.div``;","// import { useEffect, useState } from 'react';\n// import axios from 'axios';\n\nimport { DivStyled } from './PopularRecipe.styled';\n\n//! FETCH RECIPES TO MAIN PAGE\n// axios.defaults.baseURL = 'https://yummy-rest-api.onrender.com/';\n// const TOKEN =\n// \t'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0NDE5OTNjODYzZWFmOWJiYTQ2YzY2NSIsImlhdCI6MTY4MjAyMDY2OCwiZXhwIjoxNjg0NjEyNjY4fQ.cc5YEHIsXZ2ZkIFUGCySz5LtjnoU7kjVbeYXtQpyCIw';\n\n// const config = {\n// \theaders: {\n// \t\tauth: `${TOKEN}`,\n// \t},\n// };\n\n// const fetchRecipes = async () => {\n// \tconst responce = await axios.get(\n// \t\t`recipes/popular-recipes?auth=${TOKEN}`,\n// \t\tconfig\n// \t);\n// \treturn responce;\n// };\n\n\n\nexport const PopularRecipe = ({title}) => {\n//   const [popRecipes, setPopRecipes] = useState([]);\n// \tuseEffect(() => {\n// \t\tfetchRecipes()\n// \t\t\t.then(({ data }) => setPopRecipes(data))\n// \t\t\t.catch(error => error);\n// \t}, []);\n// \tconsole.log('popular-recipes', popRecipes.data.recipesByPopular);\n\n\n\n  return <DivStyled>\n    <h2>{title}</h2>\n    <ul>\n      <li key={1}><a href='https://www.youtube.com/watch?v=H5TuP6svrpo&ab_channel=%D0%A5%D0%B0%D1%89%D1%96' rel=\"noopener noreferer\"\n            area-label=\"git\">RECIPE CARD</a></li>\n    </ul>\n  </DivStyled>;\n};\n\n\n\n// \"Компонент виконує запит на бекенд за популярними рецептами\n// В разі успішної відповіді компонент рендерить список відповідних елементів\n// В разі помилки компонент рендерить повідомлення про відсутність популярних рецептів в даний момент. \n// Кожен рецепт потрібно реалізувати як посилання. По кліку на будь-яке з них користувача потрібно \n// переадресувати на сторінку з описом відповідного рецепту RecipePage\"","import { Title } from '../components/Title';\nimport { AddRecipeForm } from 'components/AddRecipePage/AddRecipeForm';\nimport { FollowUs } from 'components/FollowUs';\nimport { PopularRecipe } from 'components/AddRecipePage/PopularRecipe';\n// // import { AddRecipeDivStyled } from './AddRecipePage.styled';\n\nconst AddRecipePage = () => {\n  return (\n//   <AddRecipeDivStyled>\n\t\t<>\n\t\t\t<Title title=\"Add recipe\"/>\n\t\t\t<AddRecipeForm/>\n\t\t\t<FollowUs title=\"Follow us\"/>\n\t\t\t<PopularRecipe title=\"Popular recipe\"/>\n\t\t</>\n\n//   </AddRecipeDivStyled>;\n)};\n\nexport default AddRecipePage\n\n// \"Зверстати компоненти що знаходяться на сторінці AddRecipePage (мобільна, планшет та десктопна версії):\n// 1. MainTitle - універсальний компонент, що відмальовує заголовок і використовується на різних сторінках застосунку\n// 2. AddRecipeForm\n// 3. FollowUs\n// 4. PopularRecipe\"\n\n// export const AddRecipeDivStyled = styled.AddRecipeDiv`\n// // \twidth: 100vw;\n// // \theight: 100vh;\n// // \tposition: absolute;\n// // \tbottom: 0;\n// // \tright: 0;\n\n// // \t@media ${props => props.theme.media.tablet} {\n// // \t}\n// // \t@media ${props => props.theme.media.desktop} {\n// // \t}\n// // `;"],"names":["TitleDiv","styled","props","theme","media","tablet","desktop","TitleH","Title","title","DescriptionDiv","DescrForm","Form","InputWrapper","LabelForm","InputForm","Field","InputFile","colors","buttonPrimaryBG","RecipeDescriptionFields","onSubmit","useState","setTitle","about","setAbout","categori","setCategori","picture","setPicture","handleSubmit","resetForm","console","log","data","initialValues","autoComplete","onChange","event","target","name","value","type","as","FormStyled","RecipeIngredientsFields","RecipePreparationFields","cols","rows","AddRecipeForm","totalFormValues","setTotalFormValues","testFunc","DivStyled","FollowUs","href","rel","Icon","id","fill","width","height","PopularRecipe"],"sourceRoot":""}