{"version":3,"file":"static/js/663.174f656e.chunk.js","mappings":"6LAEaA,E,QAAYC,EAAAA,IAAH,2K,sECmBhBC,EAAeC,EAAAA,KAAaC,MAAM,CACvCC,SAAUF,EAAAA,KACRG,QANmB,4CAQnB,+IAEAC,IAAI,GACJC,IAAI,IACJC,WACFC,MAAOP,EAAAA,KACLG,QAZF,yHAcE,4IAEAI,QACAD,aAGUE,EAAa,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MAKjB,OACC,UAAC,KAAD,YACC,SAAC,KAAD,CACCC,cAAe,CAAEC,KAAM,GAAIV,SAAU,GAAIK,MAAO,IAChDM,SARgB,SAAC,EAAD,GAAyC,IAAtCX,EAAqC,EAArCA,SAAUK,EAA2B,EAA3BA,MAAWO,EAAgB,EAAhBA,UAC1CL,GAASM,EAAAA,EAAAA,IAAU,CAAEb,SAAAA,EAAUK,MAAAA,KAC/BO,GACA,EAMEE,iBAAkBjB,EAHnB,SAIE,SAAAkB,GACA,IAAQC,EAAoBD,EAApBC,OAAQC,EAAYF,EAAZE,QAChB,OACC,UAAC,KAAD,CAAYC,aAAa,MAAzB,WACC,SAAC,KAAD,uBACA,UAAC,KAAD,CACCC,UACCF,EAAQZ,QACPW,EAAOX,MAAQ,QAAU,SAH5B,WAKC,SAAC,KAAD,CAAYe,GAAG,iBACf,SAAC,KAAD,CACCC,KAAK,QACLX,KAAK,QACLY,YAAY,UAEZL,EAAQZ,QACPW,EAAOX,OACP,iCACC,SAAC,KAAD,CACCK,KAAK,QACLa,UAAWC,EAAAA,MAEZ,SAAC,KAAD,CAAkBJ,GAAG,8BAGtB,SAAC,KAAD,CAAkBA,GAAG,iCAGxB,UAAC,KAAD,CACCD,UACCF,EAAQjB,WACPgB,EAAOhB,SAAW,QAAU,SAH/B,WAKC,SAAC,KAAD,CAAYoB,GAAG,eACf,SAAC,KAAD,CACCC,KAAK,WACLX,KAAK,WACLY,YAAY,aAEZL,EAAQjB,WACPgB,EAAOhB,UACP,iCACC,SAAC,KAAD,CACCU,KAAK,WACLa,UAAWC,EAAAA,MAEZ,SAAC,KAAD,CAAkBJ,GAAG,8BAGtB,SAAC,KAAD,CAAkBA,GAAG,iCAIxB,SAAC,KAAD,CAAYC,KAAK,SAAjB,uBAGF,KAEF,SAAC,KAAD,CAAeI,GAAG,YAAlB,4BAGF,E,kBC5GYC,EAAa,WACzB,OACC,UAAC/B,EAAD,YACC,SAACgC,EAAA,EAAD,KACA,SAACrB,EAAD,KAEA,SAACsB,EAAA,EAAD,MAGF,C","sources":["pages/SigninPage/SigninPage.styled.js","components/Auth/SigninForm/SigninForm.jsx","pages/SigninPage/SigninPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const DivStyled = styled.div`\n\tpadding-bottom: 60px;\n\toverflow: clip;\n\tposition: relative;\n\tmin-height: calc(100vh - 60px);\n\tdisplay: flex;\n\tflex-direction: column;\n`;\n","import {\n\tFormStyled,\n\tLabelStyled,\n\tInputForm,\n\tInputError,\n\tH1Styled,\n\tIconStyled,\n\tIconStatusStyled,\n\tNavLinkStyled,\n\tDivStyled,\n} from 'components/Auth/AuthForm.styled';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { FormButton } from 'components/ButtonNav/ButtonNav.styled';\nimport { useDispatch } from 'react-redux';\nimport { loginUser } from 'redux/auth/operations';\n\nconst passwordRegex = /^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$/;\nconst emailRegex =\n\t/^[\\w!#$%^&*\\-=/{}[\\]_|`~?\\\\+][\\w!#$%^&*+\\-?=/{}[\\]_|`~\\\\.]{1,62}[\\w!#$%^&*\\-=/{}+[\\]_|`~?\\\\]@([\\w]+\\.){1,20}[\\w]{1,4}$/;\n\nconst SigninSchema = Yup.object().shape({\n\tpassword: Yup.string()\n\t\t.matches(\n\t\t\tpasswordRegex,\n\t\t\t'The password must include numbers and letters - the minimum number of characters in the field - 6 (inclusive), the maximum - 16 (inclusive)'\n\t\t)\n\t\t.min(3)\n\t\t.max(64)\n\t\t.required(),\n\temail: Yup.string()\n\t\t.matches(\n\t\t\temailRegex,\n\t\t\t'The local part of the mail can contain capital and small Latin letters (A-Z, a-z), numbers (from 0 to 9), but no more than 64 characters'\n\t\t)\n\t\t.email()\n\t\t.required(),\n});\n\nexport const SigninForm = () => {\n\tconst dispatch = useDispatch();\n\tconst sendSignin = ({ password, email }, { resetForm }) => {\n\t\tdispatch(loginUser({ password, email }));\n\t\tresetForm();\n\t};\n\treturn (\n\t\t<DivStyled>\n\t\t\t<Formik\n\t\t\t\tinitialValues={{ name: '', password: '', email: '' }}\n\t\t\t\tonSubmit={sendSignin}\n\t\t\t\tvalidationSchema={SigninSchema}>\n\t\t\t\t{formik => {\n\t\t\t\t\tconst { errors, touched } = formik;\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<FormStyled autoComplete=\"off\">\n\t\t\t\t\t\t\t<H1Styled>Sign In</H1Styled>\n\t\t\t\t\t\t\t<LabelStyled\n\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\ttouched.email &&\n\t\t\t\t\t\t\t\t\t(errors.email ? 'error' : 'valid')\n\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t<IconStyled id=\"icon-letter\" />\n\t\t\t\t\t\t\t\t<InputForm\n\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Email\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{touched.email &&\n\t\t\t\t\t\t\t\t\t(errors.email ? (\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t<ErrorMessage\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\t\t\t\tcomponent={InputError}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<IconStatusStyled id=\"icon-validation-error\" />\n\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<IconStatusStyled id=\"icon-validation-success\" />\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</LabelStyled>\n\t\t\t\t\t\t\t<LabelStyled\n\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\ttouched.password &&\n\t\t\t\t\t\t\t\t\t(errors.password ? 'error' : 'valid')\n\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t<IconStyled id=\"icon-lock\" />\n\t\t\t\t\t\t\t\t<InputForm\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{touched.password &&\n\t\t\t\t\t\t\t\t\t(errors.password ? (\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t<ErrorMessage\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\t\t\t\tcomponent={InputError}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<IconStatusStyled id=\"icon-validation-error\" />\n\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<IconStatusStyled id=\"icon-validation-success\" />\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</LabelStyled>\n\n\t\t\t\t\t\t\t<FormButton type=\"submit\">Sign In</FormButton>\n\t\t\t\t\t\t</FormStyled>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t</Formik>\n\t\t\t<NavLinkStyled to=\"/register\">Registration</NavLinkStyled>\n\t\t</DivStyled>\n\t);\n};\n","import { DivStyled } from './SigninPage.styled';\nimport { SigninForm } from 'components/Auth/SigninForm';\nimport { Image } from 'components/Auth/Image';\nimport { BackGround } from 'components/Auth/BackGround';\n\nexport const SigninPage = () => {\n\treturn (\n\t\t<DivStyled>\n\t\t\t<Image />\n\t\t\t<SigninForm />\n\n\t\t\t<BackGround />\n\t\t</DivStyled>\n\t);\n};\n"],"names":["DivStyled","styled","SigninSchema","Yup","shape","password","matches","min","max","required","email","SigninForm","dispatch","useDispatch","initialValues","name","onSubmit","resetForm","loginUser","validationSchema","formik","errors","touched","autoComplete","className","id","type","placeholder","component","InputError","to","SigninPage","Image","BackGround"],"sourceRoot":""}